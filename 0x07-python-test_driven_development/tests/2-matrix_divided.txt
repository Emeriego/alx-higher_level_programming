==================================
Module Name: ``2-matrix_divided``
==================================

Use ``matrix_divided``
------------------------

Module import:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now test it:

    >>> matrix_divided([[7, 3, 3], [6, 2, 6]], 2)
    [[3.5, 1.5, 1.5], [3.0, 1.0, 3.0]]

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[9, 6], [0, 2]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> >>> matrix_divided([["Alx", "Alx", "Alx"], [6, 2, 6]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[6, 0, 1], [4, 4]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[5, 7], [5, 7]], "Alx")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[5, 2], [8, 8]], -4)
    [[-1.25, -0.5], [-2.0, -2.0]]

    >>> matrix_divided("Alx", 6)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[8, 1], [7, 7]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[3, 4], [6, 7]], -2)
    [[-1.5, -2.0], [-3.0, -3.5]]

    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]
    >>> print(matrix)
    [[1, 2, 3]]

    >>> matrix_divided([[5, 14]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
